local data_types = require "st.zigbee.data_types"
local utils = require "st.zigbee.utils"
local log = require "log"
local cluster_base = require "st.zigbee.cluster_base"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'aab104a27ce2f5279180e69ba93ef579673eddc5'
-- ZCL XML version: 7.2

-----------------------------------------------------------
-- IASACE command GetZoneIDMapResponse
-----------------------------------------------------------

--- @class st.zigbee.zcl.clusters.IASACE.GetZoneIDMapResponse
--- @alias GetZoneIDMapResponse
---
--- @field public ID number 0x01 the ID of this command
--- @field public NAME string "GetZoneIDMapResponse" the name of this command
--- @field public zone_id_map_section00 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section01 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section02 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section03 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section04 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section05 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section06 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section07 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section08 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section09 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section10 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section11 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section12 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section13 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section14 st.zigbee.data_types.Bitmap16
--- @field public zone_id_map_section15 st.zigbee.data_types.Bitmap16
local GetZoneIDMapResponse = {}
GetZoneIDMapResponse.NAME = "GetZoneIDMapResponse"
GetZoneIDMapResponse.ID = 0x01
GetZoneIDMapResponse.args_def = {
  {
    name = "zone_id_map_section00",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section01",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section02",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section03",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section04",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section05",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section06",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section07",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section08",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section09",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section10",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section11",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section12",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section13",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section14",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
  {
    name = "zone_id_map_section15",
    optional = false,
    data_type = data_types.Bitmap16,
    is_complex = false,
    is_array = false,
    default = 0x0000,
  },
}

function GetZoneIDMapResponse:get_fields()
  return cluster_base.command_get_fields(self)
end

GetZoneIDMapResponse.get_length = utils.length_from_fields
GetZoneIDMapResponse._serialize = utils.serialize_from_fields
GetZoneIDMapResponse.pretty_print = utils.print_from_fields

--- Deserialize this command
---
--- @param buf buf the bytes of the command body
--- @return GetZoneIDMapResponse
function GetZoneIDMapResponse.deserialize(buf)
  return cluster_base.command_deserialize(GetZoneIDMapResponse, buf)
end

function GetZoneIDMapResponse:set_field_names()
  cluster_base.command_set_fields(self)
end

--- Build a version of this message as if it came from the device
---
--- @param device st.zigbee.Device the device to build the message from
--- @param zone_id_map_section00 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section01 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section02 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section03 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section04 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section05 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section06 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section07 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section08 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section09 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section10 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section11 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section12 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section13 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section14 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section15 st.zigbee.data_types.Bitmap16
--- @return st.zigbee.ZigbeeMessageRx The full Zigbee message containing this command body
function GetZoneIDMapResponse.build_test_rx(device, zone_id_map_section00, zone_id_map_section01, zone_id_map_section02, zone_id_map_section03, zone_id_map_section04, zone_id_map_section05, zone_id_map_section06, zone_id_map_section07, zone_id_map_section08, zone_id_map_section09, zone_id_map_section10, zone_id_map_section11, zone_id_map_section12, zone_id_map_section13, zone_id_map_section14, zone_id_map_section15)
  local args = {zone_id_map_section00, zone_id_map_section01, zone_id_map_section02, zone_id_map_section03, zone_id_map_section04, zone_id_map_section05, zone_id_map_section06, zone_id_map_section07, zone_id_map_section08, zone_id_map_section09, zone_id_map_section10, zone_id_map_section11, zone_id_map_section12, zone_id_map_section13, zone_id_map_section14, zone_id_map_section15}

  return cluster_base.command_build_test_rx(GetZoneIDMapResponse, device, args, "client")
end

--- Initialize the GetZoneIDMapResponse command
---
--- @param self GetZoneIDMapResponse the template class for this command
--- @param device st.zigbee.Device the device to build this message to
--- @param zone_id_map_section00 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section01 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section02 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section03 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section04 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section05 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section06 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section07 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section08 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section09 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section10 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section11 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section12 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section13 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section14 st.zigbee.data_types.Bitmap16
--- @param zone_id_map_section15 st.zigbee.data_types.Bitmap16
--- @return st.zigbee.ZigbeeMessageTx the full command addressed to the device
function GetZoneIDMapResponse:init(device, zone_id_map_section00, zone_id_map_section01, zone_id_map_section02, zone_id_map_section03, zone_id_map_section04, zone_id_map_section05, zone_id_map_section06, zone_id_map_section07, zone_id_map_section08, zone_id_map_section09, zone_id_map_section10, zone_id_map_section11, zone_id_map_section12, zone_id_map_section13, zone_id_map_section14, zone_id_map_section15)
  local args = {zone_id_map_section00, zone_id_map_section01, zone_id_map_section02, zone_id_map_section03, zone_id_map_section04, zone_id_map_section05, zone_id_map_section06, zone_id_map_section07, zone_id_map_section08, zone_id_map_section09, zone_id_map_section10, zone_id_map_section11, zone_id_map_section12, zone_id_map_section13, zone_id_map_section14, zone_id_map_section15}

  return cluster_base.command_init(self, device, args, "client")
end

function GetZoneIDMapResponse:set_parent_cluster(cluster)
  self._cluster = cluster
  return self
end

setmetatable(GetZoneIDMapResponse, {__call = GetZoneIDMapResponse.init})

return GetZoneIDMapResponse
