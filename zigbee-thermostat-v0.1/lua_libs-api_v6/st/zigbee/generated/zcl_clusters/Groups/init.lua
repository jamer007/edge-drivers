local cluster_base = require "st.zigbee.cluster_base"
local GroupsClientAttributes = require "st.zigbee.generated.zcl_clusters.Groups.client.attributes"
local GroupsServerAttributes = require "st.zigbee.generated.zcl_clusters.Groups.server.attributes"
local GroupsClientCommands = require "st.zigbee.generated.zcl_clusters.Groups.client.commands"
local GroupsServerCommands = require "st.zigbee.generated.zcl_clusters.Groups.server.commands"
local GroupsTypes = require "st.zigbee.generated.zcl_clusters.Groups.types"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'aab104a27ce2f5279180e69ba93ef579673eddc5'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.Groups
--- @alias Groups
---
--- @field public ID number 0x0004 the ID of this cluster
--- @field public NAME string "Groups" the name of this cluster
--- @field public attributes st.zigbee.zcl.clusters.GroupsServerAttributes | st.zigbee.zcl.clusters.GroupsClientAttributes
--- @field public commands st.zigbee.zcl.clusters.GroupsServerCommands | st.zigbee.zcl.clusters.GroupsClientCommands
--- @field public types st.zigbee.zcl.clusters.GroupsTypes
local Groups = {}

Groups.ID = 0x0004
Groups.NAME = "Groups"
Groups.server = {}
Groups.client = {}
Groups.server.attributes = GroupsServerAttributes:set_parent_cluster(Groups)
Groups.client.attributes = GroupsClientAttributes:set_parent_cluster(Groups)
Groups.server.commands = GroupsServerCommands:set_parent_cluster(Groups)
Groups.client.commands = GroupsClientCommands:set_parent_cluster(Groups)
Groups.types = GroupsTypes

function Groups.attr_id_map()
    return {
    [0x0000] = "NameSupport",
  }
end

function Groups.server_id_map()
    return {
    [0x00] = "AddGroup",
    [0x01] = "ViewGroup",
    [0x02] = "GetGroupMembership",
    [0x03] = "RemoveGroup",
    [0x04] = "RemoveAllGroups",
    [0x05] = "AddGroupIfIdentifying",
  }
end

function Groups.client_id_map()
    return {
    [0x00] = "AddGroupResponse",
    [0x01] = "ViewGroupResponse",
    [0x02] = "GetGroupMembershipResponse",
    [0x03] = "RemoveGroupResponse",
  }
end

Groups.attribute_direction_map = {
  ["NameSupport"] = "server",
}
Groups.command_direction_map = {
  ["AddGroupResponse"] = "client",
  ["ViewGroupResponse"] = "client",
  ["GetGroupMembershipResponse"] = "client",
  ["RemoveGroupResponse"] = "client",
  ["AddGroup"] = "server",
  ["ViewGroup"] = "server",
  ["GetGroupMembership"] = "server",
  ["RemoveGroup"] = "server",
  ["RemoveAllGroups"] = "server",
  ["AddGroupIfIdentifying"] = "server",
}

setmetatable(Groups, {__index = cluster_base})

Groups:init_attributes_table()
Groups:init_commands_table()

return Groups
