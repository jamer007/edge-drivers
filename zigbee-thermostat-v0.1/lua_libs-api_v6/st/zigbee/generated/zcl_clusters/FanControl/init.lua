local cluster_base = require "st.zigbee.cluster_base"
local FanControlClientAttributes = require "st.zigbee.generated.zcl_clusters.FanControl.client.attributes"
local FanControlServerAttributes = require "st.zigbee.generated.zcl_clusters.FanControl.server.attributes"
local FanControlClientCommands = require "st.zigbee.generated.zcl_clusters.FanControl.client.commands"
local FanControlServerCommands = require "st.zigbee.generated.zcl_clusters.FanControl.server.commands"
local FanControlTypes = require "st.zigbee.generated.zcl_clusters.FanControl.types"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'aab104a27ce2f5279180e69ba93ef579673eddc5'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.FanControl
--- @alias FanControl
---
--- @field public ID number 0x0202 the ID of this cluster
--- @field public NAME string "FanControl" the name of this cluster
--- @field public attributes st.zigbee.zcl.clusters.FanControlServerAttributes | st.zigbee.zcl.clusters.FanControlClientAttributes
--- @field public commands st.zigbee.zcl.clusters.FanControlServerCommands | st.zigbee.zcl.clusters.FanControlClientCommands
--- @field public types st.zigbee.zcl.clusters.FanControlTypes
local FanControl = {}

FanControl.ID = 0x0202
FanControl.NAME = "FanControl"
FanControl.server = {}
FanControl.client = {}
FanControl.server.attributes = FanControlServerAttributes:set_parent_cluster(FanControl)
FanControl.client.attributes = FanControlClientAttributes:set_parent_cluster(FanControl)
FanControl.server.commands = FanControlServerCommands:set_parent_cluster(FanControl)
FanControl.client.commands = FanControlClientCommands:set_parent_cluster(FanControl)
FanControl.types = FanControlTypes

function FanControl.attr_id_map()
    return {
    [0x0000] = "FanMode",
    [0x0001] = "FanModeSequence",
  }
end

function FanControl.server_id_map()
    return {
  }
end

function FanControl.client_id_map()
    return {
  }
end

FanControl.attribute_direction_map = {
  ["FanMode"] = "server",
  ["FanModeSequence"] = "server",
}
FanControl.command_direction_map = {}

setmetatable(FanControl, {__index = cluster_base})

FanControl:init_attributes_table()
FanControl:init_commands_table()

return FanControl
