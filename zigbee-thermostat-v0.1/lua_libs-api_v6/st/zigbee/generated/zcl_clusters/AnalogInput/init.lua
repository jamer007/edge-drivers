local cluster_base = require "st.zigbee.cluster_base"
local AnalogInputClientAttributes = require "st.zigbee.generated.zcl_clusters.AnalogInput.client.attributes"
local AnalogInputServerAttributes = require "st.zigbee.generated.zcl_clusters.AnalogInput.server.attributes"
local AnalogInputClientCommands = require "st.zigbee.generated.zcl_clusters.AnalogInput.client.commands"
local AnalogInputServerCommands = require "st.zigbee.generated.zcl_clusters.AnalogInput.server.commands"
local AnalogInputTypes = require "st.zigbee.generated.zcl_clusters.AnalogInput.types"

-- Copyright 2023 SmartThings
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- DO NOT EDIT: this code is automatically generated by tools/zigbee-lib_generator/generate_clusters_from_xml.py
-- Script version: b'aab104a27ce2f5279180e69ba93ef579673eddc5'
-- ZCL XML version: 7.2

--- @class st.zigbee.zcl.clusters.AnalogInput
--- @alias AnalogInput
---
--- @field public ID number 0x000C the ID of this cluster
--- @field public NAME string "AnalogInput" the name of this cluster
--- @field public attributes st.zigbee.zcl.clusters.AnalogInputServerAttributes | st.zigbee.zcl.clusters.AnalogInputClientAttributes
--- @field public commands st.zigbee.zcl.clusters.AnalogInputServerCommands | st.zigbee.zcl.clusters.AnalogInputClientCommands
--- @field public types st.zigbee.zcl.clusters.AnalogInputTypes
local AnalogInput = {}

AnalogInput.ID = 0x000C
AnalogInput.NAME = "AnalogInput"
AnalogInput.server = {}
AnalogInput.client = {}
AnalogInput.server.attributes = AnalogInputServerAttributes:set_parent_cluster(AnalogInput)
AnalogInput.client.attributes = AnalogInputClientAttributes:set_parent_cluster(AnalogInput)
AnalogInput.server.commands = AnalogInputServerCommands:set_parent_cluster(AnalogInput)
AnalogInput.client.commands = AnalogInputClientCommands:set_parent_cluster(AnalogInput)
AnalogInput.types = AnalogInputTypes

function AnalogInput.attr_id_map()
    return {
    [0x001C] = "Description",
    [0x0041] = "MaxPresentValue",
    [0x0045] = "MinPresentValue",
    [0x0051] = "OutOfService",
    [0x0055] = "PresentValue",
    [0x0067] = "Reliability",
    [0x006A] = "Resolution",
    [0x006F] = "StatusFlags",
    [0x0075] = "EngineeringUnits",
    [0x0100] = "ApplicationType",
  }
end

function AnalogInput.server_id_map()
    return {
  }
end

function AnalogInput.client_id_map()
    return {
  }
end

AnalogInput.attribute_direction_map = {
  ["Description"] = "server",
  ["MaxPresentValue"] = "server",
  ["MinPresentValue"] = "server",
  ["OutOfService"] = "server",
  ["PresentValue"] = "server",
  ["Reliability"] = "server",
  ["Resolution"] = "server",
  ["StatusFlags"] = "server",
  ["EngineeringUnits"] = "server",
  ["ApplicationType"] = "server",
}
AnalogInput.command_direction_map = {}

setmetatable(AnalogInput, {__index = cluster_base})

AnalogInput:init_attributes_table()
AnalogInput:init_commands_table()

return AnalogInput
